{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/tasks/task.model.ts","webpack:///src/app/tasks/task.service.ts","webpack:///src/app/tasks/tasks-add/tasks-add.component.ts","webpack:///src/app/tasks/tasks-add/tasks-add.component.html","webpack:///src/app/tasks/tasks-list/tasks-list.component.ts","webpack:///src/app/tasks/tasks-list/tasks-list.component.html","webpack:///src/app/tasks/tasks.component.ts","webpack:///src/app/tasks/tasks.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","Task","name","dueDate","completed","TaskService","http","onTaskAdded","get","map","response","task","checked","post","TasksAddComponent","taskService","addTaskValue","event","target","value","addTask","subscribe","newTask","emit","onTaskAdd","TasksListComponent","tasks","getTasks","error","console","log","push","saveTask","TasksComponent","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","<div class=\"container\">\n    <app-tasks></app-tasks>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { TasksAddComponent } from './tasks/tasks-add/tasks-add.component';\nimport { TasksListComponent } from './tasks/tasks-list/tasks-list.component';\nimport {TaskService} from \"./tasks/task.service\";\nimport { HttpClientModule } from '@angular/common/http';\nimport {FormsModule} from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TasksComponent,\n    TasksAddComponent,\n    TasksListComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule,\n        FormsModule\n    ],\n  providers: [TaskService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Task {\n    public id:number;\n    public name: string;\n    public completed: Boolean;\n    public dueDate: string;\n\n    constructor(name: string, dueDate: string, completed: boolean) {\n        this.name = name;\n        this.completed = completed;\n        this.dueDate = dueDate;\n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport {EventEmitter, Injectable} from \"@angular/core\";\nimport 'rxjs/Rx';\nimport { Task } from './task.model';\nexport * from 'rxjs-compat/Observable';\n@Injectable()\nexport class TaskService {\n\n    onTaskAdded = new EventEmitter<Task>();\n\n    constructor(private http: HttpClient) {\n    }\n\n    getTasks() {\n        return this.http.get('/api/tasks').map(response => response);\n    }\n\n    saveTask(task: Task, checked: Boolean){\n        task.completed = checked;\n        return this.http.post('api/tasks/save', task).map(response => response);\n    }\n\n    addTask(task: Task) {\n        return this.http.post('api/tasks/save', task).map(response => response);\n    }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport {TaskService} from \"../task.service\";\nimport { Task } from '../task.model';\n\n@Component({\n  selector: 'app-tasks-add',\n  templateUrl: './tasks-add.component.html',\n  styleUrls: ['./tasks-add.component.css']\n})\nexport class TasksAddComponent implements OnInit {\n\n  addTaskValue: string = null;\n  constructor(private taskService : TaskService) { }\n\n  ngOnInit(): void {}\n\n    onTaskAdd(event) {\n        let task : Task = new Task(event.target.value, \"\",false);\n        this.taskService.addTask(task)\n            .subscribe(\n                (newTask: Task) => {\n                    this.addTaskValue = ' ';\n                    this.taskService.onTaskAdded.emit(newTask)\n                }\n        );\n    }\n\n   /* private getTodaysDateAsString() {\n      let today = new Date();\n      let dd: any = today.getDate();\n      let mm: any = today.getMonth()+1;\n      let yyyy: any = today.getFullYear();\n\n      if(dd<10){\n          dd = '0'+dd;\n      }\n\n      if(mm<10){\n          mm ='0'+mm;\n      }\n\n      return dd + \"/\" + mm + \"/\" + yyyy;\n    }*/\n}\n","<head>\n    <title></title>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n</head>\n\n<div class=\"form-group\">\n    <input type=\"text\" class=\"form-control\" placeholder=\"Add new task\" (keyup.enter)=\"onTaskAdd($event)\" [(ngModel)]=\"addTaskValue\" />\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Task } from '../task.model';\nimport {TaskService} from \"../task.service\";\n\n@Component({\n  selector: 'app-tasks-list',\n  templateUrl: './tasks-list.component.html',\n  styleUrls: ['./tasks-list.component.css']\n})\nexport class TasksListComponent implements OnInit {\n\n  tasks: Task[] = [];\n  constructor(private taskService : TaskService) { }\n\n  ngOnInit() {\n     this.taskService.getTasks()\n        .subscribe(\n            (tasks: any[]) => {\n                this.tasks = tasks\n            },\n            (error)=> console.log(error)\n        );\n\n     this.taskService.onTaskAdded.subscribe(\n         (task: Task) => this.tasks.push(task)\n     );\n  }\n\n\n    onTaskChange(event, task) {\n      this.taskService.saveTask(task, event.target.checked).subscribe();\n      console.log('Task changed');\n    }\n\n    getDueDateLabel(task: Task) {\n        return task.completed ? 'label-success' : 'label-primary';\n    }\n}\n","<head>\n    <title></title>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n</head>\n\n<ul class=\"list-group\">\n    <li *ngFor=\"let task of tasks\" class=\"list-group-item\">\n        <div class=\"task-checkbox\">\n            <input type=\"checkbox\"\n                   class=\"list-child\"\n                   (change)=\"onTaskChange($event,task)\"\n                   [checked]=\"task.completed\">\n            <span ngClass=\"{{task.completed ? 'name completed' : 'name'}}\"> {{ task.name }} </span>\n            <span class=\"label {{ getDueDateLabel(task) }} pull-right\"> {{ task.dueDate }} </span>\n        </div>\n    </li>\n</ul>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<head>\n    <title></title>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n</head>\n\n<div class=\"row\">\n    <div class=\"col-md-2\">&nbsp;</div>\n    <div id=\"taskPanel\" class=\"panel panel-default\">\n        <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">Tasks</h3>\n        </div>\n        <div class=\"panel-body\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <app-tasks-add></app-tasks-add>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <app-tasks-list></app-tasks-list>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-2\">&nbsp;</div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}